import Header from '@/components/Header';
import Head from 'next/head';
import Container from 'react-bootstrap/Container';
import Button from 'react-bootstrap/Button';
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs';
import { Post } from '@/types/Post';
import Link from 'next/link';
import { useUser } from '@supabase/auth-helpers-react';
import { useEffect, useState } from 'react';
import PostEditForm from '@/components/PostEditForm';
import usePosts from '@/hooks/usePosts';
import { useRouter } from 'next/router';

type Props = {
  post: Post;
};
const PostPage = () => {
  const user = useUser();
  const router = useRouter();
  const [isEditing, setIsEditing] = useState(false);
  const { updatePost } = usePosts();
  const [post, setPost] = useState<Post | undefined>(undefined);
  const [loading, setLoading] = useState(true);
  const supabase = createClientComponentClient();

  useEffect(() => {
    const fetchPost = async () => {
      if (router.query.id) {
        const { data } = await supabase
          .from('posts')
          .select('*')
          .eq('id', router.query.id)
          .single();
        
        if (data) {
          setPost(data as any);
        }
        setLoading(false);
      }
    };

    fetchPost();
  }, [router.query.id, supabase]);
  
  const handleSubmit = async (title: string, body: string) => {
    if (post) {
      await updatePost(post.id, title, body);
      router.reload();
    }
  };

  if (loading) return <p>Loading...</p>;

  return (
    <>
      <Head>
        <title>Posts list {post?.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main>
        <Header />
        <Container>
          <Link href="/">
            <Button variant="link">{'<'}Back to all posts</Button>
          </Link>
          {isEditing ? (
            <PostEditForm post={post} saveForm={handleSubmit} />
          ) : (
            <>
              <h1>{post?.title}</h1>
              <div>{post?.body}</div>
              {user && user.id === post?.author && (
                <Button onClick={() => setIsEditing(true)}>Edit post</Button>
              )}
            </>
          )}
        </Container>
      </main>
    </>
  );
};

export default PostPage;
